<head>
    <title>Zapisana lista</title>
</head>
<body>
    <h4>Last Saved List</h4>


    <div id="app">
        <h2>List vue:</h2>
        <ol>
            <li v-for="item in items">
                <label>
                    <input type="checkbox"
                           v-on:change="toggle(item)"
                           v-bind:checked="item.Done">

                    <del v-if="item.Done">
                        {{ item.Name}}
                    </del>
                    <span v-else>
                        {{ item.Name }}
                    </span>
                </label>
            </li>
        </ol>
    </div>
</body>

<script src="https://cdn.jsdelivr.net/npm/vue/dist/vue.js"></script>
<script>
    var getList=localStorage.getItem("IdSavedList");

    var objArray = [];
    async function fetchItems() {
        fetch('/Offline/GetList/'+getList).then(Response => {
            return Response.json();
            
        }).then(data => {
            console.log(data);
            var test = JSON.parse(data);
            for (var i = 0; i < test.length; i++) {
                console.log(data);
                var newObj = { Name: test[i].Name, ID: test[i].ID, Done: test[i].Done };

                objArray.push(newObj);
            }
            if (objArray.length != 0) {
                console.log('have some items');
            }

            return objArray;
        }).catch(err => {
            console.log(err);
        })

    }
    new Vue({
        el: "#app",
        data: {
            items: [

            ]
        },
        created() {
            this.getItems();
        },
        methods: {
            toggle: function (item) {
                item.Done = !item.Done
            },
            getItems: async function () {
                //fetch(data).then(Response => Response.json()).then(data => this.items = data).catch(err => console.log(err));
                this.items = await fetchItems();
                this.items = objArray;
            }
        }
    });

</script>
<style>


    li {
        margin: 8px 0;
    }

    h2 {
        font-weight: bold;
        margin-bottom: 15px;
    }

    del {
        color: rgba(0, 0, 0, 0.3);
    }
</style>

@*console.log("test czy dziala console log");


    fetchJsonFile('/OfflineList.json', function (data) {
        return Promise.resolve(data);
        });
    var ShowData = document.getElementById("ShowData");
               console.log(data);
               console.log("test 100000");
               var objArray = [];

               for (var i = 0; i < 3; i++) {
                   var newObj = { Name: data[i].Name, ID: data[i].ID, done: false };

                   objArray.push(newObj);
                   console.log(newObj);
               }*@
@*@model List<string>
        @{
            ViewData["Title"] = "Offline";
        }

        <head>
            <link rel='manifest' href='~/manifest.json'>
        </head>
        <div class="row">
            <h4>
                Lista zakupów do zapisu offline
            </h4>


            </div>
        @foreach (var item in Model)
        {
            <br />
            @item

        }
        <br /> <br />
               <div class="row">
                   <input type="button" class="btn-primary" onclick="location.href = '@Url.Action("GetListResponse", "Offline")', fetchJsonFile('/Offline/GetListResponse')" value="Potwierdz" style="margin-bottom:3px; width:120px; margin-left:10%;" />
                   <input type="button" class="btn-primary" onclick="location.href='@Url.Action("Select_list_to_save_offline", "Offline")'" value="Cofnij" style="margin-bottom:3px; width:120px; margin-left:10%;" />

               </div>



    <script>
            function fetchJsonFile(path, callback) {
                var httpRequest = new XMLHttpRequest();
                httpRequest.onreadystatechange = function () {
                    if (httpRequest.readyState === 4) {
                        if (httpRequest.status === 200) {
                            var data = JSON.parse(httpRequest.responseText);
                            console.log(data)
                            if (callback) callback(data);
                        }
                    }
                };
                httpRequest.open('GET', path);
                httpRequest.send();
            }


            //fetchJsonFile('/SAvedOfflineList.html', function (data) {
            //    console.log(data);
            //});

        </script>
    <input type="button" class="btn-primary" onclick="location.href = '@Url.Action("GetListResponse", "Offline")', fetchJsonFile('/Offline/GetListResponse')" value="Potwierdz" style="margin-bottom:3px; width:120px; margin-left:10%;" />*@